{
  "name": "pixel-tracker",
  "version": "0.0.5",
  "description": "a simple pixel tracker for node",
  "main": "index.js",
  "bin": {},
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "express": "~2.x.x",
    "tap": "~0.2.5"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tblobaum/pixel-tracker.git"
  },
  "homepage": "https://github.com/tblobaum/pixel-tracker",
  "keywords": [
    "pixel",
    "tracker"
  ],
  "author": {
    "name": "Thomas Blobaum",
    "email": "tblobaum@gmail.com",
    "url": "https://github.com/tblobaum/"
  },
  "contributors": [
    {
      "name": "Butu Kumar",
      "url": "https://github.com/butu5/"
    },
    {
      "name": "eethann",
      "url": "https://github.com/eethann"
    },
    {
      "name": "Noah H. Smith",
      "url": "https://github.com/noazark"
    },
    {
      "name": "Qasim Zaidi",
      "url": "https://github.com/qzaidi"
    }
  ],
  "license": "MIT",
  "readme": "# pixel-tracker  \nA simple pixel-tracker for node.js\n\n[![Build Status](https://secure.travis-ci.org/tblobaum/pixel-tracker.png)](http://travis-ci.org/tblobaum/pixel-tracker)\n\n# Example\n\nCollect some data with parameters, along with the defaults\n\n``` js\n\nvar tracker = require('pixel-tracker')\n\ntracker.use(function (error, result) {\n  console.log(result)\n  \n  /*\n  {\n    \"cookies\": { \"_tracker\": \"58f911166e6d31041eba8d06e11e3f77\" },\n    \"host\": \"localhost:3000\",\n    \"cache\": { \"max-age\": \"0\" },\n    \"referer\": \"direct\",\n    \"params\": [],\n    \"decay\": 1342597993859,\n    \"useragent\": { \"browser\": \"Chrome\", \"version\": \"20.0\" },\n    \"language\": [ \"en-US\", \"en\", { \"q\": \"0.8\" } ],\n    \"geo\": { \"ip\": \"127.0.0.1\" },\n    \"domain\": \"localhost\"\n  }\n  */\n\n})\n\n// ..\n\napp.all('/pixel', tracker.middleware)\n\napp.listen()\n\n```\n\n# Methods\n\n``` js\nvar tracker = require('pixel-tracker')\n```\n\n## tracker.use(callback)\n\nThe `callback` function is called with `error`, `result`. Multiple callbacks can be used.\n\n## tracker.configure(options)\n\npixel-tracker has a few configurable options.\n\n`disable_cookies` defaults to false\n`maxAge` defaults to 2 days, which may not be desirable based on your use case\n\n## tracker.middleware(request, response)\nA function to be called for each http request which calls `response.end` with a 1x1 pixel for every request and then calls all the functions provided with `tracker.use`. This works out of the box with express and would also work with any vanilla http server as long as a cookies implementation is provided for the response object (or cookies are disabled)\n\n``` js\n\nvar tracker = require('pixel-tracker')\n\ntracker\n  .use(function (error, result) {\n    // do something with result\n    // ...\n\n  })\n  .configure({ disable_cookies : true })\n\nrequire('http').createServer(tracker.middleware).listen(3000)\n\n```\n\n# Install\n\n`npm install pixel-tracker`\n\n# Tests\n\n`npm install -g tap && npm test`\n\n# License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "_id": "pixel-tracker@0.0.5",
  "dist": {
    "shasum": "408cae6aaebccfd7f6a1e8102fec1d58ef520b4b"
  },
  "_from": "pixel-tracker@",
  "_resolved": "https://registry.npmjs.org/pixel-tracker/-/pixel-tracker-0.0.5.tgz"
}
